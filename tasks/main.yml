- name: "Ensure python3-venv and python3-dev are installed (Ubuntu)"
  apt:
    name: 
      - "python3-venv"
      - "python3-dev"
    state: "present"
  when: ansible_os_family == 'Debian'

- name: "Ensure rabbitmq-server and erlang are installed (Ubuntu)"
  apt:
    name:
      - rabbitmq-server
      - erlang
    state: "present"
  when: ansible_os_family == 'Debian'

- name: "Ensure python3-passlib is installed"
  package:
    name: "python3-passlib"
    state: "present"

- name: "Get git config global safe directories dir"
  shell: "git config --global --get-all safe.directory || echo ''"
  register: "__git_config_global_safe_dir"

- name: "Set site directory as git safe dir"
  command: "git config --global --add safe.directory {{ aipscan_install_dir | trim | regex_replace('\\/$', '') }}"
  when:
    -  aipscan_install_dir | trim() | regex_replace('\\/$', '') not in __git_config_global_safe_dir

- name: "Download code"
  git:
    repo: "https://github.com/artefactual-labs/AIPscan"
    dest: "{{ aipscan_install_dir }}"
    version: "{{ aipscan_branch }}"

- name: "Update permissions for downloaded code"
  file:
    dest: "{{ aipscan_install_dir }}"
    owner: "{{ aipscan_user }}"
    group: "{{ aipscan_group }}"
    recurse: "yes"

- name: "Install pip dependencies in virtualenv"
  pip:
    chdir: "{{ aipscan_install_dir }}"
    requirements: "requirements.txt"
    virtualenv: "{{ aipscan_virtualenv }}"
    virtualenv_command: /usr/bin/python3 -m venv
    state: "latest"

- name: "Build js dependencies"
  command:
    chdir: "{{ aipscan_install_dir }}"
    cmd: "make build"

- name: "Template systemd files"
  template: 
    src: "systemd/{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
  with_items:
    - celery.service
    - AIPscan.service

- name: "Create htpasswd file"
  htpasswd:
    path: "/etc/nginx/auth_basic/htpasswd.aipscan"
    name: "{{ aipscan_http_user }}"
    password: "{{ aipscan_http_password }}"
    owner: "root"
    mode: "0644"
  when: aipscan_http_user is defined

- name: "Create Nginx config file"
  template:
    src: "{{ item }}"
    dest: /etc/nginx/sites-available/aipscan.conf
  with_first_found:
    - "templates/{{ inventory_hostname }}/nginx/aipscan.conf.j2"
    - "templates/nginx/aipscan.conf.j2"
    - "templates/nginx/sites-available/aipscan.conf.j2"

- name: "Enable Nginx config"
  file:
    src: "/etc/nginx/sites-available/aipscan.conf"
    dest: "/etc/nginx/sites-enabled/aipscan.conf"
    state: "link"

- name: "Enable services"
  systemd:
    name: "{{ item }}"
    state: "restarted"
    enabled: "yes"
    daemon_reload: "yes"
  with_items:
    - "celery"
    - "AIPscan"
    - "nginx"
